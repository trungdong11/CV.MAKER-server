services:
  db:
    image: postgres:16
    container_name: nest_boilerplate-postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      TZ: ${TZ:-UTC}
    ports:
      - '25432:5432'
    networks:
      - nest_boilerplate-network

  redis:
    image: redis:latest
    restart: unless-stopped
    container_name: redis-container
    hostname: redis
    ports:
      - '6379:6379'
    healthcheck:
      test: [ 'CMD', 'redis-cli', '--raw', 'incr', 'ping' ]
    environment:
      REDIS_ARGS: '--requirepass ${REDIS_PASSWORD}'
    volumes:
      - redis_data:/data
    networks:
      - nest_boilerplate-network

  maildev:
    build:
      context: .
      dockerfile: maildev.Dockerfile
    ports:
      - ${MAIL_CLIENT_PORT}:1080
      - ${MAIL_PORT}:1025
    networks:
      - nest_boilerplate-network

  nest_boilerplate-api:
    image: nest_boilerplate-api
    container_name: nest_boilerplate-api
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - '3000:3000'
    depends_on:
      - db
      - redis
    networks:
      - nest_boilerplate-network

volumes:
  postgres_data:
  redis_data:

networks:
  nest_boilerplate-network:
    driver: bridge
